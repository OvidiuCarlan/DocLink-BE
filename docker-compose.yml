version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      doclink-network:
        ipv4_address: 172.18.0.2

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: dbi481968
      MYSQL_USER: dbi481968
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      doclink-network:
        ipv4_address: 172.18.0.4

  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/dbi481968
      SPRING_DATASOURCE_USERNAME: dbi481968
      SPRING_DATASOURCE_PASSWORD: password
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - mysql
      - rabbitmq
    networks:
      doclink-network:
        ipv4_address: 172.18.0.8

  post-service:
    build:
      context: ./PostService
      dockerfile: Dockerfile
    container_name: post-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/postservice
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      doclink-network:
        ipv4_address: 172.18.0.6

  appointment-service:
    build:
      context: ./AppointmentService
      dockerfile: Dockerfile
    container_name: appointment-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/appointment-db
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      doclink-network:
        ipv4_address: 172.18.0.7

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: doclink-api-gateway
    ports:
      - "9000:9000"
    environment:
      USER_SERVICE_URL: http://172.18.0.8:8080
      POST_SERVICE_URL: http://172.18.0.6:8081
      APPOINTMENT_SERVICE_URL: http://172.18.0.7:8082
    depends_on:
      - user-service
      - post-service
      - appointment-service
    networks:
      doclink-network:
        ipv4_address: 172.18.0.10
    extra_hosts:
      - "user-service:172.18.0.8"
      - "post-service:172.18.0.6"
      - "appointment-service:172.18.0.7"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doclink-frontend
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - doclink-network

  # Testing and monitoring services
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      doclink-network:
        ipv4_address: 172.18.0.5

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      doclink-network:
        ipv4_address: 172.18.0.9
    depends_on:
      - prometheus
      - influxdb

  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    networks:
      doclink-network:
        ipv4_address: 172.18.0.3

  k6:
    image: grafana/k6:latest
    container_name: k6
    volumes:
      - ./k6-scripts:/scripts
    networks:
      doclink-network:
        ipv4_address: 172.18.0.11
    depends_on:
      - influxdb
      - api-gateway
    # This command keeps the container running
    entrypoint: [ "tail", "-f", "/dev/null" ]
    extra_hosts:
      - "api-gateway:172.18.0.10"
      - "user-service:172.18.0.8"
      - "post-service:172.18.0.6"
      - "appointment-service:172.18.0.7"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # Management interface
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASSWORD=guest
    networks:
      doclink-network:
        ipv4_address: 172.18.0.12

networks:
  doclink-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1

volumes:
  mongodb_data:
  mysql_data:
  prometheus_data:
  grafana_data: